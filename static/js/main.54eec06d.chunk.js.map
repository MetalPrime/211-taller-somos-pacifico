{"version":3,"sources":["components/DisplayImg/DisplayImg.tsx","components/SelectionElements/arrow.svg","utils/getImageSrcFromUrl.ts","components/Options/Options.tsx","components/SelectionElements/SelectionElements.tsx","containers/App/App.tsx","index.tsx"],"names":["DisplayImg","className","src","alt","baseUrl","process","Options","name","imgElement","isSelect","selected","console","log","img","url","includes","getImageSrcFromUrl","onClick","SelectionElements","displays","showOptions","id","list","React","ArrowLogo","map","elemName","items","index","imgName","imgEnlace","initialSelectors","display","initialElements","App","useState","setDisplays","basename","path","exact","render","copy","slice","findIndex","elem","handleDisplay","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54eec06d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './DisplayImg.css';\r\n\r\nexport const DisplayImg = () => {\r\n    return(\r\n        <div className='DisplayImg'>\r\n            <img src=\"\" alt=\"\"/>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/arrow.e73f5d55.svg\";","const baseUrl = `${process.env.PUBLIC_URL}/img/`;\r\n\r\nexport const getImageSrcFromUrl = (url: string)=>{\r\n    if(url.includes(\"blank\")) {\r\n        return undefined;\r\n    }\r\n    return `${baseUrl}${url}`;\r\n}","import * as React from 'react';\r\nimport { getImageSrcFromUrl } from '../../utils/getImageSrcFromUrl';\r\nimport './Option.css';\r\n\r\ninterface Options {\r\n    name?: string;\r\n    imgElement : string;\r\n    isSelect? : boolean;\r\n    selected? : () => void;\r\n}\r\n\r\n\r\n\r\nexport const Options : React.FC<Options> = ({name,imgElement,isSelect,selected}) => {\r\n    console.log(\"vivo\")\r\n    var img = getImageSrcFromUrl(imgElement);\r\n\r\n    return(\r\n        <button \r\n        onClick = {selected}\r\n        className={isSelect?  \"Options Options__isSelected\" : \"Options\" }  >\r\n            <img src={(img)} alt={`img`+name}/>\r\n            \r\n        </button>\r\n    );\r\n}","import * as React from 'react';\r\nimport './SelectionElements.css';\r\nimport ArrowLogo from './arrow.svg';\r\nimport { Options } from '../Options/Options';\r\n\r\ninterface SelectionElements {\r\n    name?: string;\r\n    displays?: boolean;\r\n    id?: number;\r\n    showOptions?: () => void;\r\n    list: OptionsElements[];\r\n}\r\n\r\ninterface OptionsElements {\r\n    elemName: string;\r\n    index: number;\r\n    items: ItemsElements[];\r\n}\r\n\r\ninterface ItemsElements {\r\n    imgName: string;\r\n    imgEnlace: string;\r\n}\r\n\r\nexport const SelectionElements: React.FC<SelectionElements> = ({ name, displays, id, showOptions, list }) => {\r\n\r\n    const [selected, setSelected] = React.useState(list);\r\n\r\n    const handleSelected = (id : number) => {\r\n        const copy = list.slice();\r\n        const index = copy.findIndex(elem =>{\r\n            return elem.index === id;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='SelectionElements'>\r\n            <section className='SelectionElements__display'>\r\n                <h1>{name}</h1>\r\n                <button onClick={showOptions}><img src={ArrowLogo} alt=\"btnArrow\" className={displays ? \"SelectionElements__display--btn\" : \"SelectionElements__display--btnNo\"} /></button>\r\n            </section>\r\n\r\n            {displays && <section className='SelectionElements__options'>\r\n                <section>\r\n                {\r\n                    list.map(({ elemName, index, items }) => {\r\n                        //console.log(name +\" \" + elemName)\r\n\r\n                        if (elemName === name) {\r\n                            return(\r\n                                items.map(({ imgName, imgEnlace }) => {\r\n\r\n                                    return (\r\n                                        <Options\r\n                                        name={imgName}\r\n                                        imgElement={imgEnlace}\r\n                                        ></Options>\r\n                                        );\r\n                                }\r\n                            )\r\n\r\n                            );\r\n                        }\r\n                    }\r\n                    )\r\n                }\r\n                </section>\r\n                \r\n            </section>}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { DisplayImg } from '../../components/DisplayImg/DisplayImg';\r\nimport { SelectionElements } from '../../components/SelectionElements/SelectionElements';\r\nimport { BrowserRouter, HashRouter, Route, Router } from 'react-router-dom';\r\n\r\nconst initialSelectors = [\r\n    {\r\n        id: 5,\r\n        name: 'Articulo',\r\n        display: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Color',\r\n        display: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Material',\r\n        display: false,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Diseño',\r\n        display: false,\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Juanes',\r\n        display: false,\r\n    }\r\n];\r\nconst initialElements = [\r\n    {\r\n        elemName : 'Articulo',\r\n        index : 1,\r\n        items : [\r\n            {\r\n                imgName: \"camisa\",\r\n                imgEnlace: \"camisaBlanca.png\",\r\n            },\r\n            {\r\n                imgName: \"libreta\",\r\n                imgEnlace: \"libreta.png\",\r\n            },\r\n            {\r\n                imgName: \"thermos\",\r\n                imgEnlace: \"thermos.png\",\r\n            },\r\n            {\r\n                imgName: \"thermos\",\r\n                imgEnlace: \"camisaBlanca.png\",\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        elemName : 'Color',\r\n        index : 2,\r\n        items : [\r\n            {\r\n                imgName: \"camisa\",\r\n                imgEnlace: \"camisaBlanca.png\",\r\n            },\r\n            {\r\n                imgName: \"libreta\",\r\n                imgEnlace: \"libreta.png\",\r\n            },\r\n            {\r\n                imgName: \"thermos\",\r\n                imgEnlace: \"thermos.png\",\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        elemName : 'Material',\r\n        index : 3,\r\n        items : [\r\n            {\r\n                imgName: \"camisa\",\r\n                imgEnlace: \"camisaBlanca.png\",\r\n            },\r\n            {\r\n                imgName: \"libreta\",\r\n                imgEnlace: \"/libreta.png\",\r\n            },\r\n            {\r\n                imgName: \"thermos\",\r\n                imgEnlace: \"thermos.png\",\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        elemName : 'Diseño',\r\n        index : 4,\r\n        items : [\r\n            {\r\n                imgName: \"camisa\",\r\n                imgEnlace: \"camisaBlanca.png\",\r\n            },\r\n            {\r\n                imgName: \"libreta\",\r\n                imgEnlace: \"libreta.png\",\r\n            },\r\n            {\r\n                imgName: \"thermos\",\r\n                imgEnlace: \"thermos.png\",\r\n            },\r\n\r\n        ]\r\n    }\r\n];\r\n\r\nexport const App = () => {\r\n\r\n    const [displays, setDisplays] = React.useState(initialSelectors);\r\n\r\n    const handleDisplay = (id: number) => {\r\n        const copy = initialSelectors.slice();\r\n        const index = copy.findIndex((elem) => {\r\n            return elem.id === id;\r\n        });\r\n        //console.log(copy[index].display);\r\n\r\n            if(!copy[index].display){\r\n                copy[index].display = true;\r\n                setDisplays(copy);\r\n            } else {\r\n                copy[index].display = false;\r\n                setDisplays(copy);\r\n            }\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Route path=\"/\" exact render={\r\n            () => \r\n                <main className='App'>\r\n                <article className='App__commands'>\r\n                    <section>\r\n                        {\r\n                            initialSelectors.map(({id,name,display}) =>{\r\n    \r\n                                const showOptions = () =>{\r\n                                    handleDisplay(id); \r\n                                    \r\n                                }\r\n    \r\n                                return (\r\n                                    <SelectionElements\r\n                                    name = {name}\r\n                                    displays = {display}\r\n                                    key = {id}\r\n                                    showOptions = {showOptions}\r\n                                    list = {initialElements}\r\n                                    ></SelectionElements>\r\n                                );\r\n                            }\r\n    \r\n                            )\r\n                        }\r\n                    </section>\r\n                    <section></section>\r\n                    <section></section>\r\n                </article>\r\n                <article className='App__display'>\r\n                <DisplayImg></DisplayImg>\r\n                </article>\r\n    \r\n            </main>\r\n            \r\n        }/>\r\n\r\n        <Route path = \"/render\" render={\r\n            () =>\r\n           <h1>Dandole al operativo</h1>   \r\n        }/>  \r\n\r\n        </HashRouter>\r\n        \r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './containers/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}